{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","navigate","useNavigate","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","Navigation","to","AppRouter","isLoggedIn","exact","path","element","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"uNAkBAA,IAASC,cATc,CACrBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKF,IAAMM,EAAmBT,IACnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,U,OCgDxBC,EApEE,WACb,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAW,SAACC,GACd,MAEIA,EADAC,OAASC,EADb,EACaA,KAAMC,EADnB,EACmBA,MAEN,UAATD,EACAV,EAASW,GACO,aAATD,GACPR,EAAYS,IAKdC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBADO,UAILX,EAJK,gCAMIZ,EAAYwB,+BAA+BhB,EAAOE,GANtD,sDASIV,EAAYyB,2BAA2BjB,EAAOE,GATlD,yEAYbK,EAAS,KAAMW,SAZF,0DAAH,sDAoBlB,OACI,qCACI,uBAAML,SAAUA,EAAhB,UACI,uBACIF,KAAK,QACLQ,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRT,MAAOZ,EACPQ,SAAUA,IAEd,uBACIG,KAAK,WACLQ,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRT,MAAOV,EACPM,SAAUA,IAEd,uBAAOW,KAAK,SAASP,MAAOR,EAAa,iBAAmB,WAC3DE,KAEL,sBAAMgB,QAzBY,kBAAMjB,GAAc,SAACkB,GAAD,OAAWA,MAyBjD,SACKnB,EAAa,UAAY,uBC9BvBoB,EA9BF,WAET,IAAMC,EAAa,uCAAG,WAAOhB,GAAP,iBAAAK,EAAA,4DAKL,YAHCH,EACVF,EADAC,OAAUC,MAIVe,EAAW,IAAInC,EAAiBE,KAAKkC,mBACrB,WAAThB,IACPe,EAAW,IAAInC,EAAiBE,KAAKmC,oBARvB,SAUCpC,EAAYqC,gBAAgBH,GAV7B,yDAAH,sDAYnB,OACI,gCACI,cAAC,EAAD,IACA,gCACA,wBAAQJ,QAASG,EAAed,KAAK,SAArC,kCAGA,wBAAQW,QAASG,EAAed,KAAK,SAArC,yC,QC2CGmB,EAjED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAEvB,EAA8BjC,oBAAS,GAAvC,mBAAOkC,EAAP,KAAgBC,EAAhB,KACA,EAAgCnC,mBAASgC,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,uCAAG,sBAAAxB,EAAA,0DACPyB,OAAOC,QAAQ,qDADR,gCAKR9C,EAAU+C,IAAV,iBAAwBV,EAASW,KAAMC,SAL/B,UAMiB,KAA3BZ,EAASa,cANC,gCAOJhD,EAAeiD,WAAWd,EAASa,eAAeD,SAP9C,2CAAH,qDAWbG,EAAgB,kBAAMZ,GAAW,SAACX,GAAD,OAAWA,MAS5CV,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACbL,EAAMM,iBADO,SAEPrB,EAAU+C,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAAEZ,KAAMC,IAF/C,OAGbF,GAAW,GAHE,2CAAH,sDAMd,OACI,8BACKD,EACG,qCACI,uBAAMpB,SAAUA,EAAhB,UACI,uBAAOL,SAlBV,SAACC,GACd,IACcG,EACVH,EADAC,OAAUE,MAEdyB,EAAYzB,IAc8BA,MAAOwB,EAAUf,UAAQ,IACnD,uBAAOF,KAAK,SAASP,MAAM,oBAE/B,wBAAQU,QAASwB,EAAjB,uBAGR,qCAIA,6BAAKf,EAASI,OACbJ,EAASa,eACV,qBAAKI,IAAKjB,EAASa,cAAeK,MAAM,QAAQC,OAAO,UAKtDlB,GACG,qCACA,wBAAQV,QAASgB,EAAjB,0BACA,wBAAQhB,QAASwB,EAAjB,iC,QCsBDK,EA7EM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,EAA0BrD,mBAAS,IAAnC,mBAAOsD,EAAP,KAAcC,EAAd,KACA,EAAoCvD,mBAAS,IAA7C,mBAAOwD,EAAP,KAAmBC,EAAnB,KAEM3C,EAAQ,uCAAG,WAAMJ,GAAN,mBAAAK,EAAA,yDACbL,EAAMM,iBAEF6B,EAAgB,GACD,KAAfW,EAJS,wBAKHE,EAAgB7D,EACrB8D,MACAC,MAFqB,UAEZP,EAAQQ,IAFI,YAEGC,gBAPhB,SAQcJ,EAAcK,UAAUP,EAAY,YARlD,cAQHQ,EARG,gBASaA,EAASL,IAAIM,iBAT1B,OASTpB,EATS,qBAWI,CACbT,KAAMkB,EACNY,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQQ,IACnBhB,iBAfS,UAiBPlD,EAAU2E,WAAW,UAAUC,IAAI,CACrCnC,KAAMkB,EACNY,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQQ,IACnBhB,kBArBS,QAuBbU,EAAS,IACTE,EAAc,IAxBD,4CAAH,sDAoDd,OACI,uBAAM3C,SAAUA,EAAhB,UACI,uBACID,MAAOyC,EACP7C,SA5BK,SAACC,GACdA,EAAMM,iBACN,IACeH,EACXH,EADAC,OAAWE,MAEf0C,EAAS1C,IAwBDO,KAAK,OACLC,YAAY,uBACZmD,UAAW,MAEf,uBAAOpD,KAAK,OAAOqD,OAAO,UAAUhE,SAzBvB,SAACC,GAClB,IAGMgE,EADFhE,EADAC,OAAUgE,MAEQ,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAChB,IACqBC,EACjBD,EADAE,cAAiBD,OAErBvB,EAAcuB,IAElBJ,EAAOM,cAAcR,MAcjB,uBAAOtD,KAAK,SAASP,MAAM,UAC1B2C,GACG,gCACI,qBAAKP,IAAKO,EAAYN,MAAM,OAAOC,OAAO,SAC1C,wBAAQ5B,QAfE,kBAAMkC,EAAc,KAe9B,0BCxCL0B,EA9BF,SAAC,GAAiB,IAAf9B,EAAc,EAAdA,QACZ,EAA4BrD,mBAAS,IAArC,mBAAOoF,EAAP,KAAeC,EAAf,KAaA,OAXAC,qBAAU,WACN3F,EAAU2E,WAAW,UAAUiB,YAAW,SAACC,GACvC,IAAMC,EAAWD,EAASE,KAAKC,KAAI,SAACC,GAAD,oBAC/BjD,GAAIiD,EAASjD,IACViD,EAASC,WAEhBR,EAAUI,QAEf,IAIC,qCACA,cAAC,EAAD,CAAcpC,QAASA,IACvB,8BACK+B,EAAOO,KAAI,SAACrC,GAAD,OACR,cAAC,EAAD,CAEItB,SAAUsB,EACVrB,QAASqB,EAAMe,YAAchB,EAAQQ,KAFhCP,EAAMX,aCqBhBmD,EAxCC,SAAC,GAA6B,IAA5BzC,EAA2B,EAA3BA,QAAS0C,EAAkB,EAAlBA,YACjBC,EAAWC,cACjB,EAA4CjG,mBAASqD,EAAQ6C,aAA7D,mBAAOC,EAAP,KAAuBC,EAAvB,KAcMtF,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBACFqC,EAAQ6C,cAAgBC,EAFf,gCAGH9C,EAAQgD,cAAc,CAAEH,YAAaC,IAHlC,OAITJ,IAJS,2CAAH,sDAQd,OACI,qCACI,uBAAMjF,SAAUA,EAAhB,UACI,uBACIL,SAnBC,SAACC,GACd,IACcG,EACVH,EADAC,OAAUE,MAEduF,EAAkBvF,IAgBNO,KAAK,OACLC,YAAY,eACZR,MAAOsF,IAEX,uBAAO/E,KAAK,SAASP,MAAM,sBAE/B,wBAAQU,QAhCM,WAClB9B,EAAY6G,UACZN,EAAS,MA8BL,yBCtBGO,EAfI,SAAC,GAAiB,IAAflD,EAAc,EAAdA,QAClB,OACI,8BACI,+BACI,6BACI,cAAC,IAAD,CAAMmD,GAAG,IAAT,oBAEJ,6BACI,eAAC,IAAD,CAAMA,GAAG,WAAT,UAAqBnD,EAAQ6C,YAA7B,4BCoBLO,EAxBG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAYrD,EAA2B,EAA3BA,QAAS0C,EAAkB,EAAlBA,YAEtC,OACI,eAAC,IAAD,WACKW,GAAc,cAAC,EAAD,CAAYrD,QAASA,IACpC,cAAC,IAAD,UACKqD,EACG,qCACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,CAAMxD,QAASA,MAG9C,cAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,WAAWC,QAAS,cAAC,EAAD,CAASd,YAAaA,EAAa1C,QAASA,SAGlF,cAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,YCyBpCC,MA1Cf,WACE,MAAwB9G,oBAAS,GAAjC,mBAAO+G,EAAP,KAAaC,EAAb,KACA,EAA8BhH,mBAAS,MAAvC,mBAAOqD,EAAP,KAAgB4D,EAAhB,KAwBA,OAvBA3B,qBAAU,WACR7F,EAAYyH,oBAAmB,SAACC,GAE5BF,IADEE,GACS,CACTtD,IAAKsD,EAAKtD,IACVqC,YAAaiB,EAAKjB,YAClBG,cAAe,SAACe,GAAD,OAAUD,EAAKd,cAAce,MAKhDJ,GAAQ,QAET,IAWD,mCACGD,EACD,cAAC,EAAD,CACEhB,YAZc,WAClB,IAAMoB,EAAO1H,EAAY4H,YACzBJ,EAAW,CACTpD,IAAKsD,EAAKtD,IACVqC,YAAaiB,EAAKjB,YAClBG,cAAe,SAACe,GAAD,OAAUD,EAAKd,cAAce,OAQ1CV,WAAYY,QAAQjE,GACpBA,QAASA,IAGT,qBCpCRkE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAAS8B,eAAe,W","file":"static/js/main.b43783ed.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID \r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {name, value},\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;   \r\n            if (newAccount) {\r\n            //create newAccount\r\n            data = await authService.createUserWithEmailAndPassword(email, password);\r\n        } else {\r\n            //log in\r\n            data = await authService.signInWithEmailAndPassword(email, password);\r\n        }\r\n    }   catch (error){\r\n        setError(error.message);\r\n        }\r\n    }\r\n\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n\r\nreturn (\r\n    <>\r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder='Email' \r\n                required\r\n                value={email}\r\n                onChange={onChange}\r\n            />\r\n            <input \r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n                value={password}\r\n                onChange={onChange}\r\n            />\r\n            <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}  />\r\n            {error}\r\n        </form>\r\n        <span onClick={toggleAccount}>\r\n            {newAccount ? \"Sign In\" : \"Create Account\"}\r\n        </span>\r\n    </>\r\n\r\n);\r\n};\r\n\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\n\r\nconst Auth = () => {\r\n    \r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name},\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n            <button onClick={onSocialClick} name=\"google\">\r\n                Continue with Google\r\n            </button>\r\n            <button onClick={onSocialClick} name=\"github\">\r\n                Continue with Github\r\n            </button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState} from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        \r\n        if (ok) {\r\n            \r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if (nweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete(); \r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n        };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet});\r\n        setEditing(false);\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input onChange={onChange}value={newNweet} required />\r\n                        <input type=\"submit\" value=\"Update Nweet\"/>\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n            <>\r\n\r\n\r\n\r\n            <h4>{nweetObj.text}</h4>\r\n            {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} width=\"100px\" height=\"100px\" />\r\n            )}\r\n\r\n\r\n\r\n            {isOwner && (\r\n                <>\r\n                <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                <button onClick={toggleEditing}>Edit Nweet</button>\r\n                </>\r\n                )}\r\n            </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    \r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();        \r\n        \r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target : { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    \r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n            />\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n            <input type=\"submit\" value=\"Nweet\" />\r\n            {attachment && (\r\n                <div>\r\n                    <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                    <button onClick={onClearAttachment}>Clear</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n        \r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n        <NweetFactory userObj={userObj} />\r\n        <div>\r\n            {nweets.map((nweet) => (\r\n                <Nweet \r\n                    key={nweet.id} \r\n                    nweetObj={nweet}\r\n                    isOwner={nweet.creatorId === userObj.uid}\r\n                />\r\n            ))}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home; ","import { authService, dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\"; \r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\n\r\nconst Profile = ({userObj, refreshUser }) => {\r\n    const navigate = useNavigate();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        navigate(\"/\");\r\n    }\r\n    \r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }, \r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName});\r\n            refreshUser();\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input \r\n                    onChange={onChange} \r\n                    type=\"text\" \r\n                    placeholder=\"Display Name\" \r\n                    value={newDisplayName} \r\n                />\r\n                <input type=\"submit\" value=\"Update Profile\" />\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { Link} from \"react-router-dom\";\r\n\r\n\r\nconst Navigation = ( {userObj} ) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Routes>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                    <Route exact path=\"/\" element={<Home userObj={userObj}/>}/>\r\n                        \r\n\r\n                    <Route exact path=\"/profile\" element={<Profile refreshUser={refreshUser} userObj={userObj}/>}/>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\" element={<Auth/>}/>\r\n                    \r\n                       \r\n                )}\r\n\r\n            </Routes>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          uid: user.uid,\r\n          displayName: user.displayName,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(false);\r\n      }\r\n      setInit(true);\r\n    });   \r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      uid: user.uid,\r\n      displayName: user.displayName,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {init ? (\r\n      <AppRouter \r\n        refreshUser={refreshUser}\r\n        isLoggedIn={Boolean(userObj)}\r\n        userObj={userObj}\r\n      />\r\n      ) : ( \r\n        \"initializing...\"\r\n      )}\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"components/App\"\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}